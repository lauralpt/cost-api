spring.application.name=ClearingCostAPI
# ==========================================================================
# Database Configuration
# ==========================================================================
# Configuration for in-memory H2 database (development and testing)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
# H2 Console configuration (accessible at: http://localhost:8081/h2-console)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ==========================================================================
# Hibernate Configuration
# ==========================================================================
# Schema generation configuration
# ddl-auto: none (uses schema.sql) | update (for automatic development updates)
spring.jpa.hibernate.ddl-auto=none

# Show SQL generated by Hibernate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ==========================================================================
# SQL Script Initialization
# ==========================================================================
# Execute schema.sql script to create tables on startup
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
# Execute data.sql script to insert initial data into the database*
spring.sql.init.data-locations=classpath:data.sql

# ==========================================================================
# Logs Configuration
# ==========================================================================
# Log for the application
logging.level.org.springframework=INFO
logging.level.com.example.clearingcostapi=DEBUG

# ==========================================================================
# Swagger (OpenAPI) - API Documentation
# ==========================================================================
# UI access to Swagger: http://localhost:8081/swagger-ui.html
# Swagger (OpenAPI) - Configuration
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.custom-css=/custom-swagger.css

# ==========================================================================
# REST Client Configuration for Binlist
# ==========================================================================
# Additional configurations: timeout settings for the REST client of the Binlist API
binlist.api.base-url=https://lookup.binlist.net
binlist.api.connect-timeout=5000   # 5 sec
binlist.api.read-timeout=10000     # 10 sec

# ==========================================================================
# Production Configuration - MySQL (Deployable in Docker)*
# ==========================================================================
# Uncomment these lines to use MySQL when deploying in production
# spring.datasource.url=jdbc:mysql://db:3306/clearing_costs
# spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# spring.datasource.username=root
# spring.datasource.password=root

# ==========================================================================
# Redis
# ==========================================================================
spring.data.redis.host=localhost
spring.data.redis.port=6379

# ==========================================================================
# JWT
# ==========================================================================
server.port=8081
jwt.secret=8jkL#P4@e9dZ$x!rT7uV^W2&mC%hQn0sA
spring.security.user.password={noop}337beb4e-535f-4f6f-958c-c10b6f49cb03


